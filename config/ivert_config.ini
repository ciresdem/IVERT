[DEFAULT]
# In the code from configparser.config(), paths will be automatically detected by looking for a folder delimeter
# ("/" on linux/cygwin, "\" on Windows). If the paths are absolute (starting with the root drive), they will be
# assigned as absolute paths. To avoid the conversion to absolute paths, wrap the string in quotes (" ") and it'll
# just be read as-is.

# The base directory of this project. All relative directory paths are relative to the location of THIS FILE.
# The utils.configfile utility will turn this into an absolute path upon reading it.
# An exception is if the variable name begins with "s3_". In that case it's an S3 bucket path and will not be
# converted to an absolute path.

project_base_directory = ../

# The version will be dynamically filled in from the VERSION file at runtime.
ivert_version = None

# ICESat-2 ATL points are given in 'seconds since the atlas_spd_epoch', which is Jan 1, 2018 00:00:00 Zulu time.
# In Python, convert this to a datetime.
atlas_sdp_epoch = 2018-01-01T00:00:00Z

dem_default_ndv = -99999.0

nsidc_atl_version = "006"

# The CUDEM cache directory. CUDEM will place a folder called .cudem_cache in this directory.
cudem_cache_directory = %(project_base_directory)s/scratch_data

# An empty tiny tiff file to use for the IVERT test utility.
empty_tiff = %(project_base_directory)s/data/empty_tile.tif

# Locations to download icesat2 raw granules (h5), photon databases (h5),  and photon geopackage files (gpkg).
icesat2_granules_directory = %(project_base_directory)s/data/icesat2/granules
icesat2_granules_subset_directory = %(project_base_directory)s/data/icesat2/granule_subsets

# Location of the ICESat-2 photon database and support files.
icesat2_photon_tiles_directory = %(project_base_directory)s/../ETOPO/data/icesat2/photon_tiles
icesat2_photon_empty_tile = %(icesat2_photon_tiles_directory)s/ATL03_EMPTY_TILE.h5
icesat2_photon_geopackage = %(icesat2_photon_tiles_directory)s/../photon_tiles.gpkg
icesat2_download_progress_csv = %(icesat2_photon_tiles_directory)s/../download_progress.csv
icesat2_bad_granules_csv = %(icesat2_photon_tiles_directory)s/../bad_granules_list.csv
icesat2_granule_validation_results_directory = %(icesat2_photon_tiles_directory)s/../granule_validation_results/{0}s/

# Compression options for databases
feather_database_compress_algorithm = zstd
feather_database_compress_level     = 5

# IVERT config templates, for users and jobs
ivert_user_config_template = %(project_base_directory)s/config/ivert_user_config_TEMPLATE.ini
ivert_job_config_template = %(project_base_directory)s/config/ivert_job_config_TEMPLATE.ini
ivert_email_templates = %(project_base_directory)s/config/email_templates.ini

s3_ivert_job_subdirs_template = [command]/[username]/[job_id]
ivert_commands = ["validate", "import", "update"]

# The s3_bucket variables refer to the names of the S3 buckets.
# These variables (currenlty set to none) will be filled in at runtime.
# This will happen from the ivert_setup/setup/paths.sh file on the server, and from
# the ~/.src/ivert_s3_credentials.ini file on the client.
# Look at the s3.py::add_s3_buckets_to_config() function for how this works.
# IVERT config variables starting with "s3_" are not detected as "paths" if they have "/" in them, as opposed to other variables.
s3_bucket_database = None
s3_bucket_import_untrusted = None
s3_import_untrusted_endpoint_url = None

s3_bucket_import_trusted = None
s3_bucket_quarantine = None
s3_quarantine_prefix_base = CUDEM/NA/IVERT/
s3_import_prefix_base = CUDEM/NA/IVERT/

s3_bucket_export_client = None
s3_export_client_endpoint_url = None
s3_export_client_prefix_base = incoming/COGS/MGG/CUDEM/IVERT
s3_bucket_export_server = None
s3_export_server_prefix_base = outgoing/COGS/MGG/CUDEM/IVERT

# Locations in the S3 to look for files.
# These are set to None in the use environment, but are used in the AWS environment.
s3_icesat2_data_directory = None
s3_photon_geopackage_key = None
s3_photon_tiles_directory_prefix = None
s3_bad_granules_csv_key = None

# User config options, retrived at runtime from the user configfile (on the client side).
# On the server side, these variables remain unused with None values.
user_data_directory = ~/.ivert
user_data_creds_directory = %(user_data_directory)s/creds
user_configfile = %(user_data_creds_directory)s/ivert_user_config.ini
ivert_s3_credentials_file = %(user_data_creds_directory)s/ivert_s3_credentials.ini

# These user variables unset by default, but the config.py script will set them from the IVERT user_configfile,
# defined above, at runtime. These will be populated when the script is running. They are ignored on the server.
user_email = None
username = None
aws_profile_ivert_import_untrusted = None
aws_profile_ivert_export_client = None

# The IVERT database, local copy, client-side
ivert_jobs_db_schema_file = ./ivert_jobs_schema.sql
# The "jobs" directory holds the job status information, as well as the datafiles for each individual job.
ivert_jobs_directory_local = %(user_data_directory)s/jobs
ivert_jobs_database_basename = ivert_jobs.db
ivert_jobs_database_local_fname = %(ivert_jobs_directory_local)s/%(ivert_jobs_database_basename)s
ivert_jobs_archive_dir = None

# The location in the export bucket of the database where the job status database sits.
s3_ivert_jobs_database_bucket_type_server = "export_server"
s3_ivert_jobs_database_server_key = %(s3_export_server_prefix_base)s%(ivert_jobs_database_basename)s
s3_ivert_jobs_database_bucket_type_client = "export_client"
s3_ivert_jobs_database_client_key = %(s3_export_client_prefix_base)s%(ivert_jobs_database_basename)s

# For some files, we want to tag the metadata with its local md5 hash. This is the metadata fieldname used for that.
s3_md5_metadata_key = md5
s3_jobs_db_latest_job_metadata_key = latest_job
s3_jobs_db_version_number_metadata_key = vnum
s3_jobs_db_ivert_version_metadata_key = ivert_version
s3_jobs_db_jobs_since_metadata_key = jobs_since
s3_jobs_db_min_client_version_metadata_key = min_client_version

# Number of seconds to sleep between checking for new incoming jobs on the server.
ivert_server_job_check_interval_s = 15
# Number of minutes to wait for all the files to be available in the trusted bucket before giving up,
# assigning an error status to the files that haven't made it, and moving on.
ivert_server_job_file_download_timeout_mins = 60

# The AWS Simple Notification Service (SNS) ARN for IVERT/CUDEMs. Filled in at runtime for the server.
# Left blank for the client.
sns_topic_arn = None

# This is a placeholder for the server IVERT data directory. Not used for the client.
ivert_data_directory = None
# The IVERT setup paths file. Used by the server. Unused on the client.
ivert_setup_paths_file = None

# The ivert github repository, and the git/pip commands to install or upgrade it.
ivert_github_repo = https://github.com/ciresdem/IVERT.git
ivert_pip_install_command = "pip install --user git+%(ivert_github_repo)s"
ivert_pip_upgrade_command = "pip install --upgrade --user git+%(ivert_github_repo)s"

ivert_jobs_stdout_dir = None

[AWS]
# Overwritten (or added) parameters if we're sitting in an AWS environment (or lambda function) rather than a desktop.
# This will be determined using the utils.is_aws.is_aws() function at runtime.

ivert_data_directory = /mnt/uvol0/ivert_data

# The IVERT database, local copy, server-side
ivert_jobs_directory_local = %(ivert_data_directory)s/jobs/
ivert_jobs_archive_dir = %(ivert_data_directory)s/database_archives/
ivert_jobs_database_local_fname = %(ivert_jobs_directory_local)s/%(ivert_jobs_database_basename)s

ivert_jobs_stdout_dir = %(ivert_data_directory)s/jobs_stdout

# Locations to put icesat2 data on the EC2 instance.
icesat2_granules_directory = %(ivert_data_directory)s/icesat2/granules
icesat2_granules_subset_directory = %(ivert_data_directory)s/icesat2/granule_subsets
icesat2_photon_tiles_directory = %(ivert_data_directory)s/icesat2/photon_tiles
icesat2_photon_geopackage = %(icesat2_photon_tiles_directory)s/../photon_tiles.gpkg
icesat2_bad_granules_csv = %(icesat2_photon_tiles_directory)s/../bad_granules_list.csv
# Outputs from validations of incoming ICESat-2 granules, to flag "bad" granules.
icesat2_granule_validation_results_directory = %(icesat2_granules_directory)s/../granule_validations/

# Locations in the S3 database bucket to look for the photon database files.
s3_icesat2_data_directory = IVERT/icesat2
s3_photon_geopackage_key = %(s3_icesat2_data_directory)s/photon_tiles.gpkg
s3_photon_tiles_directory_prefix = %(s3_icesat2_data_directory)s/photon_tiles/

s3_bad_granules_csv_key = ivert_database/bad_granules_list.csv

ivert_setup_paths_file = %(project_base_directory)s/../ivert_setup/setup/paths.sh

cudem_cache_directory = %(ivert_data_directory)s/cache